#################################################
# Kappa Lambda Architecture Reference Config    #
#################################################
kappa {

  app-name = "KappaLambda"
  spark.checkpoint.dir = "./tmp"

  cassandra {
    keyspace = "kappa_gobmx_data"
    table.gobmx.raw.tx = "raw_tx_data"
    table.raw = "raw_weather_data"
    table.daily.temperature = "daily_aggregate_temperature"
    table.daily.precipitation = "daily_aggregate_precip"
    table.cumulative.precipitation = "year_cumulative_precip"
    table.sky = "sky_condition_lookup"
    table.stations = "weather_station"
  }
  # The raw weather data year range to iterate, within 2000
  # right now not downloading, only using 1 local in /${data.dir}
  data {
    load.path = "./data/load"
    file.extension = ".csv.gz"
  }

  kafka-dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "thread-pool-executor"
    # Configuration for the thread pool
    thread-pool-executor {
      # minimum number of threads to cap factor-based core number to
      core-pool-size-min = 2
      # No of core threads ... ceil(available processors * factor)
      core-pool-size-factor = 2.0
      # maximum number of threads to cap factor-based number to
      core-pool-size-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 100
  }
}

//#//#snippet
//akka {
//  actor {
//    provider = "akka.cluster.ClusterActorRefProvider"
//  }
//  remote {
//    log-remote-lifecycle-events = off
//    netty.tcp {
//      hostname = "127.0.0.1"
//      port = 0
//    }
//  }
//
//
//  cluster {
//    seed-nodes = [
//      "akka.tcp://ClusterSystem@127.0.0.1:2551",
//      "akka.tcp://ClusterSystem@127.0.0.1:2552"]
//
//    #//#snippet
//    # excluded from snippet
//    auto-down-unreachable-after = 10s
//    #//#snippet
//    # auto downing is NOT safe for production deployments.
//    # you may want to use it during development, read more about it in the docs.
//    #
//    # auto-down-unreachable-after = 10s
//  }
//}
//
//# Disable legacy metrics in akka-cluster.
//akka.cluster.metrics.enabled=off
//
//# Enable metrics extension in akka-cluster-metrics.
//akka.extensions=["akka.cluster.metrics.ClusterMetricsExtension"]
//
//# Sigar native library extract location during tests.
//# Note: use per-jvm-instance folder when running multiple jvm on one host.
//akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native
//#//#snippet